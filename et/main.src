	NAME	MAIN
	LIST E
	NLIST M,R,T,X

	PUBLIC MAINMENU,FFAFF,FFUPROT,REDTEAM
	PUBLIC TRNSFMENU,STARTMENU,CLEARMENU,GAMETYPE
	PUBLIC LNAMES

	EXTRN STATUS,INTERM,OUTTERM,FFADR,LNCHARS,FIRSTLN
	EXTRN LASTLN,SCNTYPE,CLRSBUF,SCNHND,EDITNM
	EXTRN CURPOSN,POSNCUR,CURSOR,MSGOUT,INIT2,SCNBUF
	EXTRN POSNFST,CLEAR_SCN


;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
;XXXXXX 				 XXXXXXX
;XXXXXX		    MENUS		 XXXXXXX
;XXXXXX					 XXXXXXX
;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

;-------------- notes ----------------
;(1) format files selection lines MUST
; be sequential
;(2) tasks in address tables must equal
;select line numbers in format files

;REVISIONS LOG
;	8-16-86 DSe
;	semi-overhaul


MFST	EQU 8
SFST	EQU 21
CHAFST	EQU 3
TIM1FST EQU 2


	DSEG
SELECTTBL:	DS 2
FFADDR:		DS 2
GAMETYPE:	DS 1
REDTEAM:	DS 20
XFFADR:		DS 2
XLNCHARS:	DS 1
XFIRSTLN:	DS 1
XLASTLN:	DS 1
SCNBF2:		DS 100


	FILE EQUATES.SRC

	CSEG

*********************************************
****		MAIN MENU		*****
*********************************************

MAINMENU:
	CALL CLEAR_SCN

	;dsply menu
	LD HL,MAINFF
	LD (FFADDR),HL
	CALL DSPLYFF
	LD	HL,MAINMSG
	CALL	MSGOUT
	;get selection, go task
	;and return
	LD HL,MAINTBL
	LD (SELECTTBL),HL
	CALL GETSELECTION

	JR MAINMENU

;------- MAIN MENU FORMAT FILE ------
MAINFF:
	DB 0FEH,HLFINT			; SET TO 1/2 INTENSITY
	DB 0EEH,01,01,'MAIN menu'	; PRINT MSG AT LN 1,COL 1
	DB 0EEH,01,60,'version 081786'	; DITTO AT LN 1, COL 30
	;selections
	DB 0FEH,FULINT			; BACK TO FULL INTENSITY
	
	DB 0FDH,MFST,16,'PUBLIC'
	DB 0FDH,MFST+2,16,'LEAGUE'
	DB 0FDH,MFST+4,16,'FREE FOR ALL'
	DB	0FFH
MAINMSG:
	DB '    Make selection with up/down '
	DB 'ARROWS, then press RETURN    '
	DB	03
MAINTBL:
	DB 3	;no. of tbl entrys

	DB MFST
	DW PUB

	DB MFST+2
	DW LEAG

	DB MFST+4
	DW FFA



*********************************************
****	       TRANSFER MENU		*****
*********************************************

TRNSFMENU:
	LD DE,(CURSOR)
		PUSH DE
	;dsply menu
	LD HL,TRNSFFF
	LD (FFADDR),HL
	CALL DSPLYFF
	LD	HL,MAINMSG
	CALL	MSGOUT
	;get selection, go task
	;and return
	LD HL,TRNSFTBL
	LD (SELECTTBL),HL
	CALL GETSELECTION
		POP DE
	LD (CURSOR),DE

	RET

;------- TRANSFER MENU FORMAT FILE ------
TRNSFFF:
	DB 0FEH,HLFINT			; SET TO 1/2 INTENSITY
	;selections
	DB 0FEH,FULINT			; BACK TO FULL INTENSITY
	
	DB 0FDH,SFST,40,'TRANSFER'
	DB 0FDH,SFST+1,40,'EDIT    '
	DB 0EEH,SFST+2,40,'        '
	DB	0FFH

TRNSFTBL:
	DB 2	;no. of tbl entrys

	DB SFST
	DW TRNSFR1

	DB SFST+1
	DW EDIT2

TRNSFR1:
	LD A,1
	RET

EDIT2:	LD A,2
	RET



*********************************************
****	       START MENU		*****
*********************************************

STARTMENU:
	LD	DE,(CURSOR)
		PUSH	DE	
	;dsply menu
	LD HL,STARTFF
	LD (FFADDR),HL
	CALL DSPLYFF
	LD	HL,MAINMSG
	CALL	MSGOUT
	;get selection, go task
	;and return
	LD HL,STARTTBL
	LD (SELECTTBL),HL
	CALL GETSELECTION
		POP	DE
	LD	(CURSOR),DE		
	RET

;------- START MENU FORMAT FILE ------
STARTFF:
	DB 0FEH,HLFINT			; SET TO 1/2 INTENSITY
	;selections
	DB 0FEH,FULINT			; BACK TO FULL INTENSITY
	
	DB 0FDH,SFST,40,'START   '
	DB 0FDH,SFST+1,40,'EDIT    '
	DB 0EEH,SFST+2,40,'        '
	DB	0FFH

STARTTBL:
	DB 2	;no. of tbl entrys

	DB SFST
	DW START1

	DB SFST+1
	DW EDIT2

START1:
	LD A,1
	RET



*********************************************
****	       CLEAR MENU		*****
*********************************************

CLEARMENU:
	LD	DE,(CURSOR)
		PUSH	DE
	;dsply menu
	LD HL,CLEARFF
	LD (FFADDR),HL
	CALL DSPLYFF
	LD	HL,MAINMSG
	CALL	MSGOUT
	;get selection, go task
	;and return
	LD HL,CLEARTBL
	LD (SELECTTBL),HL
	CALL GETSELECTION
		POP DE
	LD	(CURSOR),DE
	RET

;------- CLEAR MENU FORMAT FILE ------
CLEARFF:
	DB 0FEH,HLFINT			; SET TO 1/2 INTENSITY
	;selections
	DB 0FEH,FULINT			; BACK TO FULL INTENSITY
	
	DB 0FDH,SFST,40,'CLEAR   '
	DB 0FDH,SFST+1,40,'EDIT   '
	DB 0FDH,SFST+2,40,'MENU   '
	DB	0FFH

CLEARTBL:
	DB 3	;no. of tbl entrys

	DB SFST
	DW CLEAR1

	DB SFST+1
	DW EDIT2

	DB SFST+2
	DW MENU3

CLEAR1:
	LD A,1
	RET

MENU3:
	LD A,3
	RET

TBD: RET



****************************************************
****		    TASK SUBS			****
****************************************************


;===========================================
;====	GET SELECTION, CALL SELECTION	====
;===========================================

GETSELECTION:
	;cursor to 1st selectable
	LD HL,(FFADDR)
	DEC HL
SEL1:	INC HL
	LD A,(HL)
	CP 0FDH
	JR NZ,SEL1
	;selectable found, posn cursor
	INC HL	;get ln#
	LD D,(HL)
	INC HL	;get col#
	LD E,(HL)
	DEC E
	DEC E
	CALL POSNCUR
	LD	A,BLINK			; ERS
	CALL	LNATTR			; ERS

GET:	;get selction
	CALL CHARIN

GET10:	;ck KB entry

	CP UPARROW
	JP Z,UPA
	CP DNARROW
	JP Z,DNA
	CP ENTER
	JP Z,ENTR
	JR GET

;	-----------------------
;		UP ARROW
;	-----------------------

UPA:	;search format file for user select
	;line# < current cursor line#
	LD DE,(CURSOR)
	LD B,0
	LD HL,(FFADDR)
	DEC HL
UPA1:	INC HL
	LD A,(HL)

	CP 0FFH
	JR Z,UPAEOF	;EOF

	;ck for user select mark
	CP 0FDH
	JR NZ,UPA1

	;select mark found
	INC HL		;move to line#
	LD A,(HL)
	CP D
	JR NC,UPA1

	;select ln# < cursor ln# found
	;-----------------------------
	LD B,(HL)	;save line#
	INC HL
	LD C,(HL)	;save col#
	JP UPA1


UPAEOF:	;if B=0, then no line was found, exit.
	LD A,B
	OR A
	JR Z,UPAEXIT
		PUSH BC
	;make current cursor line normal
	LD DE,(CURSOR)
	CALL POSNCUR
	LD A,NORM
	CALL LNATTR

	;position cursor to select ln
	;and blink same
		POP BC
	LD D,B
	LD E,C
	DEC E
	DEC E
	CALL POSNCUR
	LD A,BLINK
	CALL LNATTR

UPAEXIT:	JP GET

;	------------------------
;		DOWN ARROW
;	------------------------
DNA:	;search format file for user select
	;line# > current cursor line#
	LD DE,(CURSOR)
	LD HL,(FFADDR)
	DEC HL
DNA1:	INC HL
	LD A,(HL)

	CP 0FFH
	JR Z,DNAEXIT		;EOF

	;ck for user select mark
	CP 0FDH
	JR NZ,DNA1

	;select mark found
	INC HL		;move to line#
	LD A,D		;cursor ln#
	CP (HL)
	JR NC,DNA1

	;select ln# < cursor ln# found
	;-----------------------------
		PUSH HL
	;make current cursor line normal
	LD DE,(CURSOR)
	CALL POSNCUR
	LD A,NORM
	CALL LNATTR

	;position cursor to select ln
	;and blink same
		POP HL
	LD D,(HL)
	INC HL
	LD E,(HL)
	DEC E
	DEC E
	CALL POSNCUR
	LD A,BLINK
	CALL LNATTR

DNAEXIT:	JP GET

;	----------------------
;		ENTER
;	----------------------
ENTR:
	;parser task name
	LD DE,(CURSOR)
	LD C,D
	LD HL,(SELECTTBL)
	CALL ADRPAR
	JP C,GET	;no task assigned

	;call selected task
	LD DE,GETRET
		PUSH DE
	JP (HL)

GETRET:
		PUSH AF
	CALL CLR_MSG_AREA
		POP AF
	RET


;===========================================
;====	    DISPLAY FORMAT FILE		====
;===========================================

DSPLYFF:


	;format screen
	;-------------
	LD HL,(FFADDR)
	DEC HL

DFF1:	INC HL
	LD A,(HL)	;get byte from format
			;file
	;IF EOF, THEN return.
	CP 0FFH
		RET Z		;>>>>>>>>>>>

	;CK FOR DISPLAY ATTRIBUTES (0FEH code)
	;IF encountered,get attributes to REG C
	;and go get next file byte. ELSE cont

	CP 0FEH
	JR NZ,DFF2

	INC HL
	LD C,(HL)
		PUSH HL
	CALL CHGATTR
		POP HL
	JR DFF1

DFF2:	;CK FOR TEXT DISPLAY CODE (0FDH, 0EEH)
	;IF encountered, THEN cont ELSE go get
	;next file byte
	CP 0FDH
	JR Z,DFF3
	CP 0EEH
	JR NZ,DFF1	;no text dsply code

DFF3:	;---------------------
	;TEXT CODE ENCOUNTERED
	;---------------------
	;position cursor at text display addr
	INC HL		;point to line#
	LD D,(HL)
	INC HL		;point to col#
	LD E,(HL)
		PUSH HL
	CALL POSNCUR
		POP HL
DFF31:	;get char(s) and display until a file
	;code is encountered
	INC HL
	LD A,(HL)

	;ck for a file code
	AND 0E0H
	CP 0E0H
	DEC HL
	JR Z,DFF1	;end of dsply text

	;display char
	INC HL
	LD A,(HL)
		PUSH HL
	CALL CHAROUT
		POP HL
	JR DFF31




****************************************************
****		ANCILLARY SUBS			****
****************************************************


;===============================================
;		ADDRESS PARSER			
;===============================================
;ENTRY:	C = service #
;	HL=TABLE ADDR where:
;		TABLE:	no. of table entrys
;			service#
;			ROUTINE'S ADDRESS
;			service#
;			ROUTINE'S ADDRESS
;			etc.
;EXIT:	IF PARSER SUCCESSFUL, THEN RETURNS WITH
;	HL=ROUTINE'S ADDRESS, A = service # &
;	CF=0. ELSE CF=1.
;USES:	AF HL DE
;----------------------------------------------!
ADRPAR:
	LD B,(HL)	;no. of entrys to HL
	INC HL
PAR0:	LD A,(HL)
	CP C
	JR Z,PAR1	;a match
;NO match
	INC HL		;move to next rec
	INC HL
	INC HL
	DJNZ PAR0
;table exhausted
	LD A,C	;restore ASC char to A
	SCF
	RET	;>>>>>>>>>>>>>>>>>>>>>>
;-----	ROUTINE'S ADDRESS TO HL
PAR1:	INC HL
	LD E,(HL)
	INC HL
	LD D,(HL)
	EX DE,HL
	LD A,C	;restore service# to A
	AND A		;clear CF
	RET	;>>>>>>>>>>>>>>>>>>>>>>>>>




****************************************************
****		TERMINAL BIOS			****
****************************************************



;=========================================
;==	SET LINE ATTRIBUTE FROM		==
;==	CURSOR TO END OF LINE		==
;==	entry:	A=attribute		==
;=========================================

LNATTR:		PUSH AF
	LD A,ESC
	CALL CHAROUT
	LD A,'G'
	CALL CHAROUT
		POP AF
	CALL CHAROUT
	RET


;=========================================
;==	     CHANGE ATTR		==
;== entry: C=attr			==
;=========================================

CHGATTR:	PUSH BC
	LD A,ESC
	CALL CHAROUT
		POP BC
	LD A,C
	CALL CHAROUT
		RET  ;>>>>>>>>>>>>>>>>>>>



;=========================================
;==	CLEAR MESSAGE AREA
;=========================================

CLR_MSG_AREA:

	LD D,20
	LD E,1
	CALL POSNCUR

	CALL CLR_FROM_CUR

		RET	;>>>>>>>>>>>>



;===========================================
;====	CLEAR FROM CURSOR TO END OF SCN	====
;=========================================== 

CLR_FROM_CUR:
	LD A,ESC
	CALL CHAROUT
	LD A,'Y'
	CALL CHAROUT
	RET




CHARIN:
	CALL INTERM
	RET


CHAROUT: CALL OUTTERM
	RET   




****************************************************
****		SELECTIONS FROM MAINMENU	****
****************************************************


****************************
****	FREE FOR ALL	****
****************************
FFA:
	LD A,FREFRALL
	LD (GAMETYPE),A

	LD HL,FFAFF
	CALL ENTRYSCN
	RET

FFAFF:
	DB 0EEH,1,35,'FREE FOR ALL'
	DB 0EEH,3,IDFLD1+11,'RED',0EEH,3,IDFLD2+9,'GREEN'
	DB 0FEH,FULINT
	DB 0FCH,0,IDFLD1,10
	DB 0FCH,0,NMFLD1,10
	DB 0FCH,0,IDFLD2,10
	DB 0FCH,0,NMFLD2,10
	DB 0FFH

FFUPROT:
	DB 0FCH,0,IDFLD1,1
	DB 0FCH,0,NMFLD1,10
	DB 0FCH,0,IDFLD2,1
	DB 0FCH,0,NMFLD2,10
	DB 0FFH



****************************
****	  PUBLIC	****
****************************
PUB:
	LD	A,PUBLIK
	LD	(GAMETYPE),A

	LD	HL,PUBFF
	CALL ENTRYSCN
	RET

PUBFF:
	DB	0EEH,1,35,'PUBLIC GAME'
	DB	0EEH,3,IDFLD1+11,'RED',0EEH,3,IDFLD2+9,'GREEN'
	DB	0FEH,FULINT
	DB	0FCH,0,IDFLD1,10
	DB	0FCH,0,NMFLD1,10
	DB	0FCH,0,IDFLD2,10
	DB	0FCH,0,NMFLD2,10
	DB	0FFH


****************************
****	  LEAGUE	****
****************************
LEAG:
	LD	A,LEAGUE
	LD	(GAMETYPE),A

	LD	HL,LEAGFF
	CALL	ENTRYSCN

	RET


TEAMMSG: DB '   ENTER TEAM NAMES   ***  Ctrl-Q to QUIT  ***   ',03	

TEAMFF:
	DB 0EEH,1,35,'LEAGUE '
	DB 0EEH,3,IDFLD1,'RED',0EEH,3,IDFLD2,'GREEN'
	DB 0FEH,FULINT
	DB 0FCH,0,NMFLD1,10
	DB 0FCH,0,NMFLD2,10
	DB 0FFH


******************************************
**					**
**  	HANDLE LEAGUE TAEM NAMES	**
**					**
******************************************
;called by SCNHND

LNAMES:
	;save 1st 20 bytes of SCNBUF

	LD HL,SCNBUF
	LD DE,SCNBF2
	LD BC,20
	LDIR

	;save current SCNHND enviro

	LD HL,(FFADR)
	LD (XFFADR),HL

	LD A,(LNCHARS)
	LD (XLNCHARS),A

	LD A,(FIRSTLN)
	LD (XFIRSTLN),A

	LD A,(LASTLN)
	LD (XLASTLN),A

	;copy REDTEAM (red/grn team names) to SCNBUF

	LD HL,REDTEAM
	LD DE,SCNBUF
	LD BC,20
	LDIR

	;init SCNHND enviro for league names

	LD HL,TEAMFF
	LD (FFADR),HL

	LD A,20
	LD (LNCHARS),A

	LD A,3
	LD (FIRSTLN),A

	LD A,3
	LD (LASTLN),A

	;position cursor at 1st scn field

	CALL POSNFST

	;edit team names

	LD HL,TEAMMSG
	CALL MSGOUT

	CALL EDITNM

	;save edited team name

	LD HL,SCNBUF
	LD DE,REDTEAM
	LD BC,20
	LDIR

	;restore saved SCNHND enviro

	LD HL,(XFFADR)
	LD (FFADR),HL

	LD HL,(XLNCHARS)
	LD (LNCHARS),HL

	LD HL,(XFIRSTLN)
	LD (FIRSTLN),HL

	LD HL,(XLASTLN)
	LD (LASTLN),HL

	;restore save 1st 20 bytes of SCNBUF

	LD HL,SCNBF2
	LD DE,SCNBUF
	LD BC,20
	LDIR

	;position cursor at 1st scn field

	CALL POSNFST

	RET


LEAGFF:
	DB 0EEH,1,35,'LEAGUE '
	DB 0EEH,3,IDFLD1,'RED',0EEH,3,IDFLD2,'GREEN'
	DB 0FEH,FULINT
	DB 0FCH,0,IDFLD1,10
	DB 0FCH,0,NMFLD1,10
	DB 0FCH,0,IDFLD2,10
	DB 0FCH,0,NMFLD2,10
	DB 0FFH


;-----------------------------------
;	ENTER SCNHND SUB
;-----------------------------------

ENTRYSCN:
	LD (FFADR),HL

	LD A,40
	LD (LNCHARS),A

	LD A,5
	LD (FIRSTLN),A

	LD A,14
	LD (LASTLN),A

	LD A,2
	LD (SCNTYPE),A

	CALL CLRSBUF
	CALL	SCNHND
	RET
